// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230308140851_InitialDatabaseMigration")]
    partial class InitialDatabaseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.AttendanceDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("attendance_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("HometaskDone")
                        .HasColumnType("boolean")
                        .HasColumnName("hometask_done");

                    b.Property<DateTime>("LectureDate")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("LectureId")
                        .HasColumnType("integer")
                        .HasColumnName("lecture_id");

                    b.Property<bool>("Presence")
                        .HasColumnType("boolean")
                        .HasColumnName("presence");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("StudentId", "LectureId", "LectureDate")
                        .IsUnique();

                    b.ToTable("attendance", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = false,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 6,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 7,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 8,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 9,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 9
                        },
                        new
                        {
                            Id = 10,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = false,
                            StudentId = 10
                        },
                        new
                        {
                            Id = 11,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 11
                        },
                        new
                        {
                            Id = 12,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Presence = true,
                            StudentId = 12
                        },
                        new
                        {
                            Id = 13,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 2,
                            Presence = true,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 14,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 2,
                            Presence = false,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 15,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 2,
                            Presence = true,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 16,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 2,
                            Presence = false,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 17,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 3,
                            Presence = true,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 18,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 3,
                            Presence = true,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 19,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 3,
                            Presence = true,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 20,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 3,
                            Presence = false,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 21,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 4,
                            Presence = true,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 22,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 4,
                            Presence = false,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 23,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 4,
                            Presence = true,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 24,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 4,
                            Presence = true,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 25,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 5,
                            Presence = true,
                            StudentId = 9
                        },
                        new
                        {
                            Id = 26,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 5,
                            Presence = true,
                            StudentId = 10
                        },
                        new
                        {
                            Id = 27,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 5,
                            Presence = true,
                            StudentId = 11
                        },
                        new
                        {
                            Id = 28,
                            HometaskDone = false,
                            LectureDate = new DateTime(2013, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 5,
                            Presence = true,
                            StudentId = 12
                        },
                        new
                        {
                            Id = 29,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 6,
                            Presence = true,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 30,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 6,
                            Presence = true,
                            StudentId = 6
                        },
                        new
                        {
                            Id = 31,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 6,
                            Presence = true,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 32,
                            HometaskDone = true,
                            LectureDate = new DateTime(2013, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 6,
                            Presence = true,
                            StudentId = 8
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.GroupDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("group_name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "6501"
                        },
                        new
                        {
                            Id = 2,
                            Name = "6502"
                        },
                        new
                        {
                            Id = 3,
                            Name = "6503"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.HometaskDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("hometask_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HometaskDate")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("LectureId")
                        .HasColumnType("integer")
                        .HasColumnName("lecture_id");

                    b.Property<short>("Mark")
                        .HasColumnType("smallint")
                        .HasColumnName("mark");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("StudentId");

                    b.ToTable("hometasks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HometaskDate = new DateTime(2013, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Mark = (short)4,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            HometaskDate = new DateTime(2013, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 1,
                            Mark = (short)5,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            HometaskDate = new DateTime(2013, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 2,
                            Mark = (short)3,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 4,
                            HometaskDate = new DateTime(2013, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LectureId = 2,
                            Mark = (short)4,
                            StudentId = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.LectureDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("lecture_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("lecture_name");

                    b.Property<short?>("TeacherId")
                        .HasColumnType("smallint")
                        .HasColumnName("teacher_id");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("lectures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Maths",
                            TeacherId = (short)1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Probability theory",
                            TeacherId = (short)1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Physics",
                            TeacherId = (short)2
                        },
                        new
                        {
                            Id = 4,
                            Name = "History",
                            TeacherId = (short)3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Biology",
                            TeacherId = (short)4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chemistry",
                            TeacherId = (short)5
                        },
                        new
                        {
                            Id = 7,
                            Name = "English",
                            TeacherId = (short)6
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.ScheduleDb", b =>
                {
                    b.Property<int>("LectureId")
                        .HasColumnType("integer")
                        .HasColumnName("lecture_id");

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.HasKey("LectureId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("schedule", (string)null);

                    b.HasData(
                        new
                        {
                            LectureId = 1,
                            GroupId = 1
                        },
                        new
                        {
                            LectureId = 1,
                            GroupId = 2
                        },
                        new
                        {
                            LectureId = 1,
                            GroupId = 3
                        },
                        new
                        {
                            LectureId = 2,
                            GroupId = 1
                        },
                        new
                        {
                            LectureId = 3,
                            GroupId = 1
                        },
                        new
                        {
                            LectureId = 4,
                            GroupId = 2
                        },
                        new
                        {
                            LectureId = 5,
                            GroupId = 3
                        },
                        new
                        {
                            LectureId = 6,
                            GroupId = 3
                        },
                        new
                        {
                            LectureId = 7,
                            GroupId = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.StudentDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("full_name");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("students", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "romankozlov@gmail.com",
                            FullName = "Roman Kozlov",
                            GroupId = 1,
                            PhoneNumber = "89169475896"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maximzakharov@gmail.com",
                            FullName = "Maxim Zakharov",
                            GroupId = 1,
                            PhoneNumber = "89129475994"
                        },
                        new
                        {
                            Id = 3,
                            Email = "kirillmorozov@gmail.com",
                            FullName = "Kirill Morozov",
                            GroupId = 1,
                            PhoneNumber = "89159475789"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ivansvistunov@gmail.com",
                            FullName = "Ivan Svistunov",
                            GroupId = 1,
                            PhoneNumber = "89129491486"
                        },
                        new
                        {
                            Id = 5,
                            Email = "igorsokolov@gmail.com",
                            FullName = "Igor Sokolov",
                            GroupId = 2,
                            PhoneNumber = "88329445692"
                        },
                        new
                        {
                            Id = 6,
                            Email = "sergeykoshkin@gmail.com",
                            FullName = "Sergey Koshkin",
                            GroupId = 2,
                            PhoneNumber = "89169435789"
                        },
                        new
                        {
                            Id = 7,
                            Email = "anastasiasoboleva@gmail.com",
                            FullName = "Anastasia Soboleva",
                            GroupId = 2,
                            PhoneNumber = "89139435787"
                        },
                        new
                        {
                            Id = 8,
                            Email = "kristinakereeva@gmail.com",
                            FullName = "Kristina Kereeva",
                            GroupId = 2,
                            PhoneNumber = "83129438452"
                        },
                        new
                        {
                            Id = 9,
                            Email = "marialarina@gmail.com",
                            FullName = "Maria Larina",
                            GroupId = 3,
                            PhoneNumber = "89459445623"
                        },
                        new
                        {
                            Id = 10,
                            Email = "olgasmirnova@gmail.com",
                            FullName = "Olga Smirnova",
                            GroupId = 3,
                            PhoneNumber = "89147835231"
                        },
                        new
                        {
                            Id = 11,
                            Email = "viktormironov@gmail.com",
                            FullName = "Viktor Mironov",
                            GroupId = 3,
                            PhoneNumber = "89157535221"
                        },
                        new
                        {
                            Id = 12,
                            Email = "konstantingusev@gmail.com",
                            FullName = "Konstantin Gusev",
                            GroupId = 3,
                            PhoneNumber = "89127534610"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.TeacherDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("full_name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("phone_number");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("teachers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivanivanov@gmail.com",
                            FullName = "Ivan Ivanov",
                            PhoneNumber = "89166975213"
                        },
                        new
                        {
                            Id = 2,
                            Email = "peterpetrov@gmail.com",
                            FullName = "Peter Petrov",
                            PhoneNumber = "88166975649"
                        },
                        new
                        {
                            Id = 3,
                            Email = "peterivanov@gmail.com",
                            FullName = "Peter Ivanov",
                            PhoneNumber = "88126932678"
                        },
                        new
                        {
                            Id = 4,
                            Email = "larisamironova@gmail.com",
                            FullName = "Larisa Mironova",
                            PhoneNumber = "89177875231"
                        },
                        new
                        {
                            Id = 5,
                            Email = "nikolaygirin@gmail.com",
                            FullName = "Nikolay Girin",
                            PhoneNumber = "88496575634"
                        },
                        new
                        {
                            Id = 6,
                            Email = "galinasemenova@gmail.com",
                            FullName = "Galina Semenova",
                            PhoneNumber = "88166991679"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.AttendanceDb", b =>
                {
                    b.HasOne("DataAccess.Entities.LectureDb", "Lecture")
                        .WithMany("Students")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.StudentDb", "Student")
                        .WithMany("Lectures")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataAccess.Entities.HometaskDb", b =>
                {
                    b.HasOne("DataAccess.Entities.LectureDb", "Lecture")
                        .WithMany("Hometasks")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.StudentDb", "Student")
                        .WithMany("Hometasks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataAccess.Entities.LectureDb", b =>
                {
                    b.HasOne("DataAccess.Entities.TeacherDb", "Teacher")
                        .WithMany("Lectures")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("DataAccess.Entities.ScheduleDb", b =>
                {
                    b.HasOne("DataAccess.Entities.GroupDb", "Group")
                        .WithMany("Schedule")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.LectureDb", "Lecture")
                        .WithMany("Schedule")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("DataAccess.Entities.StudentDb", b =>
                {
                    b.HasOne("DataAccess.Entities.GroupDb", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("DataAccess.Entities.GroupDb", b =>
                {
                    b.Navigation("Schedule");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DataAccess.Entities.LectureDb", b =>
                {
                    b.Navigation("Hometasks");

                    b.Navigation("Schedule");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DataAccess.Entities.StudentDb", b =>
                {
                    b.Navigation("Hometasks");

                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("DataAccess.Entities.TeacherDb", b =>
                {
                    b.Navigation("Lectures");
                });
#pragma warning restore 612, 618
        }
    }
}
